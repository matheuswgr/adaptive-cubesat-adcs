[35m[1mScanning dependencies of target smartdata_test[0m
[ 50%] [32mBuilding CXX object CMakeFiles/smartdata_test.dir/src/smartdata_test.cpp.o[0m
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:39:131:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kspin(std::shared_ptr<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >)[m[Kâ€™
     rclcpp::spin(std::make_shared<ResponsiveSmartData<Dummy_Transducer<1,float>,float,std_msgs::msg::Float32>>(1,1,1,10,&interest)[01;31m[K)[m[K;
                                                                                                                                   [01;31m[K^[m[K
In file included from [01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144:0[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:7[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1[m[K:
[01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:44:1:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::spin(rclcpp::node_interfaces::NodeBaseInterface::SharedPtr)
 [01;36m[Kspin[m[K(rclcpp::node_interfaces::NodeBaseInterface::SharedPtr node_ptr);
 [01;36m[K^~~~[m[K
[01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:44:1:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Krclcpp::node_interfaces::NodeBaseInterface::SharedPtr {aka std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>}[m[Kâ€™
[01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:48:1:[m[K [01;36m[Knote: [m[Kcandidate: void rclcpp::spin(rclcpp::Node::SharedPtr)
 [01;36m[Kspin[m[K(rclcpp::Node::SharedPtr node_ptr);
 [01;36m[K^~~~[m[K
[01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:48:1:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Krclcpp::Node::SharedPtr {aka std::shared_ptr<rclcpp::Node>}[m[Kâ€™
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1:0[m[K:
/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h: In instantiation of â€˜[01m[KResponsiveSmartData<Transducer, Value, Message>::ResponsiveSmartData(unsigned int, int, int, int, Interest<Message>*) [with Transducer = Dummy_Transducer<1, float>; Value = float; Message = std_msgs::msg::Float32_<std::allocator<void> >][m[Kâ€™:
[01m[K/usr/include/c++/7/ext/new_allocator.h:136:4:[m[K   required from â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/alloc_traits.h:475:4:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:526:39:[m[K   required from â€˜[01m[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:637:4:[m[K   required from â€˜[01m[Kstd::__shared_count<_Lp>::__shared_count(std::_Sp_make_shared_tag, _Tp*, const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:1295:35:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:344:64:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:690:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:706:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}][m[Kâ€™
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:39:130:[m[K   required from here
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:61:9:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KInterest<std_msgs::msg::Float32_<std::allocator<void> > >::Interest()[m[Kâ€™
         [01;31m[K{[m[K
         [01;31m[K^[m[K
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:19:9:[m[K [01;36m[Knote: [m[Kcandidate: Interest<Message>::Interest(int, std::__cxx11::string) [with Message = std_msgs::msg::Float32_<std::allocator<void> >; std::__cxx11::string = std::__cxx11::basic_string<char>]
         [01;36m[KInterest[m[K(int period, std::string topicIdentifier) : Node("topicIdentifier")
         [01;36m[K^~~~~~~~[m[K
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:19:9:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 0 provided
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:68:34:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >[m[Kâ€™ has no member named â€˜[01m[Kcreate_wall_timer[m[Kâ€™
             refreshTimer = [01;31m[Kthis->create_wall_timer[m[K(std::chrono::milliseconds(refreshPeriod), std::bind(&ResponsiveSmartData<Transducer, Value, Message>::update, this));
                            [01;31m[K~~~~~~^~~~~~~~~~~~~~~~~[m[K
CMakeFiles/smartdata_test.dir/build.make:81: recipe for target 'CMakeFiles/smartdata_test.dir/src/smartdata_test.cpp.o' failed
make[2]: *** [CMakeFiles/smartdata_test.dir/src/smartdata_test.cpp.o] Error 1
make[1]: *** [CMakeFiles/smartdata_test.dir/all] Error 2
CMakeFiles/Makefile2:95: recipe for target 'CMakeFiles/smartdata_test.dir/all' failed
make: *** [all] Error 2
Makefile:159: recipe for target 'all' failed

[35m[1mScanning dependencies of target smartdata_test[0m
[ 50%] [32mBuilding CXX object CMakeFiles/smartdata_test.dir/src/smartdata_test.cpp.o[0m
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1:0[m[K:
/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h: In instantiation of â€˜[01m[KInterest<Message>::Interest(int, std::__cxx11::string) [with Message = std_msgs::msg::Float32_<std::allocator<void> >; std::__cxx11::string = std::__cxx11::basic_string<char>][m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:35:58:[m[K   required from here
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:22:17:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kqueue_size[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
             int [01;35m[Kqueue_size[m[K = 10;
                 [01;35m[K^~~~~~~~~~[m[K
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1:0[m[K:
/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h: In instantiation of â€˜[01m[KResponsiveSmartData<Transducer, Value, Message>::ResponsiveSmartData(unsigned int, int, int, int, Interest<Message>*) [with Transducer = Dummy_Transducer<1, float>; Value = float; Message = std_msgs::msg::Float32_<std::allocator<void> >][m[Kâ€™:
[01m[K/usr/include/c++/7/ext/new_allocator.h:136:4:[m[K   required from â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/alloc_traits.h:475:4:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:526:39:[m[K   required from â€˜[01m[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:637:4:[m[K   required from â€˜[01m[Kstd::__shared_count<_Lp>::__shared_count(std::_Sp_make_shared_tag, _Tp*, const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:1295:35:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:344:64:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:690:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:706:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}][m[Kâ€™
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:40:130:[m[K   required from here
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:68:26:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >::create_wall_timer(std::chrono::milliseconds, std::_Bind_helper<false, void (ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >::*)(int), ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >*, const std::_Placeholder<1>&>::type)[m[Kâ€™
             refreshTimer = this->create_wall_timer(std::chrono::milliseconds(refreshPeriod), std::bind(&ResponsiveSmartData<Transducer, Value, Message>::update, this, std::placeholders::_1));
In file included from [01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0[m[K,
                 from [01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:7[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1[m[K:
[01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:335:3:[m[K [01;36m[Knote: [m[Kcandidate: template<class DurationRepT, class DurationT, class CallbackT> typename rclcpp::WallTimer<CallbackT>::SharedPtr rclcpp::Node::create_wall_timer(std::chrono::duration<_Rep1, _Period1>, CallbackT, rclcpp::callback_group::CallbackGroup::SharedPtr)
   [01;36m[Kcreate_wall_timer[m[K(
   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:335:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:1219:0[m[K,
                 from [01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:7[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1[m[K:
/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node_impl.hpp: In substitution of â€˜[01m[Ktemplate<class DurationRepT, class DurationT, class CallbackT> typename rclcpp::WallTimer<CallbackT>::SharedPtr rclcpp::Node::create_wall_timer(std::chrono::duration<_Rep1, _Period1>, CallbackT, rclcpp::callback_group::CallbackGroup::SharedPtr) [with DurationRepT = long int; DurationT = std::ratio<1, 1000>; CallbackT = std::_Bind<void (ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >::*(ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >*, std::_Placeholder<1>))(int)>][m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:68:26:[m[K   required from â€˜[01m[KResponsiveSmartData<Transducer, Value, Message>::ResponsiveSmartData(unsigned int, int, int, int, Interest<Message>*) [with Transducer = Dummy_Transducer<1, float>; Value = float; Message = std_msgs::msg::Float32_<std::allocator<void> >][m[Kâ€™
[01m[K/usr/include/c++/7/ext/new_allocator.h:136:4:[m[K   required from â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/alloc_traits.h:475:4:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:526:39:[m[K   required from â€˜[01m[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:637:4:[m[K   required from â€˜[01m[Kstd::__shared_count<_Lp>::__shared_count(std::_Sp_make_shared_tag, _Tp*, const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:1295:35:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:344:64:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:690:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:706:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}][m[Kâ€™
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:40:130:[m[K   required from here
[01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node_impl.hpp:194:1:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 [01;31m[KNode[m[K::create_wall_timer(
 [01;31m[K^~~~[m[K
[01m[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node_impl.hpp:194:1:[m[K [01;36m[Knote: [m[Kinvalid template non-type parameter
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1:0[m[K:
/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h: In instantiation of â€˜[01m[Kvoid ResponsiveSmartData<Transducer, Value, Message>::update(int) [with Transducer = Dummy_Transducer<1, float>; Value = float; Message = std_msgs::msg::Float32_<std::allocator<void> >][m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:68:104:[m[K   required from â€˜[01m[KResponsiveSmartData<Transducer, Value, Message>::ResponsiveSmartData(unsigned int, int, int, int, Interest<Message>*) [with Transducer = Dummy_Transducer<1, float>; Value = float; Message = std_msgs::msg::Float32_<std::allocator<void> >][m[Kâ€™
[01m[K/usr/include/c++/7/ext/new_allocator.h:136:4:[m[K   required from â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/alloc_traits.h:475:4:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:526:39:[m[K   required from â€˜[01m[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:637:4:[m[K   required from â€˜[01m[Kstd::__shared_count<_Lp>::__shared_count(std::_Sp_make_shared_tag, _Tp*, const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr_base.h:1295:35:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:344:64:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:690:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}][m[Kâ€™
[01m[K/usr/include/c++/7/bits/shared_ptr.h:706:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, Interest<std_msgs::msg::Float32_<std::allocator<void> > >*}][m[Kâ€™
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:40:130:[m[K   required from here
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:77:25:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ki[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
         void update(int [01;35m[Ki[m[K)
                         [01;35m[K^[m[K
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:2:0[m[K:
/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/transducer.h: In instantiation of â€˜[01m[Kvoid Transducer<_UNIT, Value>::actuate(const Value&) [with long unsigned int _UNIT = 1; Value = float][m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:44:1:[m[K   required from here
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/transducer.h:18:43:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kvalue[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
         virtual void actuate(const Value &[01;35m[Kvalue[m[K){}
                                           [01;35m[K^~~~~[m[K
CMakeFiles/smartdata_test.dir/build.make:81: recipe for target 'CMakeFiles/smartdata_test.dir/src/smartdata_test.cpp.o' failed
make[2]: *** [CMakeFiles/smartdata_test.dir/src/smartdata_test.cpp.o] Error 1
make[1]: *** [CMakeFiles/smartdata_test.dir/all] Error 2
CMakeFiles/Makefile2:95: recipe for target 'CMakeFiles/smartdata_test.dir/all' failed
Makefile:159: recipe for target 'all' failed
make: *** [all] Error 2

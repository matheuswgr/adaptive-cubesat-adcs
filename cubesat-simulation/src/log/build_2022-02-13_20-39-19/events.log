[0.000000] (-) TimerEvent: {}
[0.000522] (-) JobUnselected: {'identifier': 'cubesat_controller'}
[0.000851] (-) JobUnselected: {'identifier': 'cubesat_description'}
[0.003859] (-) JobUnselected: {'identifier': 'cubesat_gazebo'}
[0.009669] (smartdata_test) JobQueued: {'identifier': 'smartdata_test', 'dependencies': OrderedDict()}
[0.009759] (smartdata_test) JobStarted: {'identifier': 'smartdata_test'}
[0.059085] (smartdata_test) JobProgress: {'identifier': 'smartdata_test', 'progress': 'cmake'}
[0.060173] (smartdata_test) JobProgress: {'identifier': 'smartdata_test', 'progress': 'build'}
[0.061108] (smartdata_test) Command: {'cmd': ['/usr/local/bin/cmake', '--build', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/build/smartdata_test', '--', '-j8', '-l8'], 'cwd': '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/build/smartdata_test', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'matheuswagner'), ('LANGUAGE', 'en'), ('LC_TIME', 'pt_BR.UTF-8'), ('TEXTDOMAIN', 'im-config'), ('OSPL_INFOFILE', '<stdout>'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '3810'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/snap/code/88/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('LD_LIBRARY_PATH', '/opt/rti.com/rti_connext_dds-5.3.1/lib/x64Linux3gcc5.4.0:/home/matheuswagner/ros2_dashing/ros2-linux/opt/yaml_cpp_vendor/lib:/home/matheuswagner/ros2_dashing/ros2-linux/opt/rviz_ogre_vendor/lib:/usr/lib:/home/matheuswagner/ros2_dashing/ros2-linux/lib:/usr/lib/x86_64-linux-gnu/gazebo-9/plugins:/opt/ros/dashing/opt/yaml_cpp_vendor/lib:/opt/ros/dashing/lib:/home/matheuswagner/Downloads/omnetpp-4.6-src/omnetpp-4.6/lib'), ('SHLVL', '2'), ('OLDPWD', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('OSPL_URI', 'file:///home/matheuswagner/ros2_dashing/ros2-linux/share/opensplice_cmake_module/config/ros_ospl.xml'), ('QT4_IM_MODULE', 'xim'), ('HOME', '/home/matheuswagner'), ('DESKTOP_SESSION', 'ubuntu'), ('TERM_PROGRAM_VERSION', '1.64.2'), ('GIO_LAUNCHED_DESKTOP_FILE', '/var/lib/snapd/desktop/applications/code_code.desktop'), ('OSPL_VERBOSITY', '2'), ('NDDSHOME', '/opt/rti.com/rti_connext_dds-5.3.1'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL', 'true'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/snap/code/88/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('ROS_PYTHON_VERSION', '3'), ('LC_MONETARY', 'pt_BR.UTF-8'), ('LC_CTYPE', 'pt_BR.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/snap/code/88/usr/share/code/code'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('OSPL_TMPL_PATH', '/usr/etc/opensplice/idlpp'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '22186'), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('COLCON_PREFIX_PATH', '/home/matheuswagner/ros2_dashing/ros2-linux'), ('IM_CONFIG_PHASE', '2'), ('ROS_DISTRO', 'dashing'), ('LOGNAME', 'matheuswagner'), ('GTK_IM_MODULE', 'ibus'), ('_', '/home/matheuswagner/.local/bin/colcon'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('ROS_VERSION', '2'), ('PKG_CONFIG_PATH', '/home/matheuswagner/ros2_dashing/ros2-linux/lib/x86_64-linux-gnu/pkgconfig:/home/matheuswagner/ros2_dashing/ros2-linux/lib/pkgconfig'), ('USERNAME', 'matheuswagner'), ('XDG_SESSION_ID', '2'), ('TERM', 'xterm-256color'), ('OSPL_ERRORFILE', '<stderr>'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '2'), ('PATH', '/opt/rti.com/rti_connext_dds-5.3.1/lib/x64Linux3gcc5.4.0:/opt/rti.com/rti_connext_dds-5.3.1/bin:/home/matheuswagner/ros2_dashing/ros2-linux/bin:/home/matheuswagner/.local/bin:/opt/ros/dashing/bin:/home/matheuswagner/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/matheuswagner/Downloads/omnetpp-4.6-src/omnetpp-4.6/bin:/home/matheuswagner/Downloads/omnetpp-4.6-src/omnetpp-4.6/bin'), ('PAPERSIZE', 'a4'), ('SESSION_MANAGER', 'local/matheuswagner-Inspiron-7572:@/tmp/.ICE-unix/3732,unix/matheuswagner-Inspiron-7572:/tmp/.ICE-unix/3732'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'pt_BR.UTF-8'), ('BAMF_DESKTOP_FILE_HINT', '/var/lib/snapd/desktop/applications/code_code.desktop'), ('GDK_BACKEND', 'x11'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('OSPL_HOME', '/usr'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'pt_BR.UTF-8'), ('RMW_IMPLEMENTATION', 'rmw_fastrtps_cpp'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('TERM_PROGRAM', 'vscode'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XMODIFIERS', '@im=ibus'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-c7856e65b5.sock'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('AMENT_PREFIX_PATH', '/home/matheuswagner/ros2_dashing/ros2-linux:/opt/ros/dashing'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('GSETTINGS_SCHEMA_DIR', '/snap/code/88/usr/share/glib-2.0/schemas'), ('DISABLE_WAYLAND', '1'), ('LC_NAME', 'pt_BR.UTF-8'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'pt_BR.UTF-8'), ('TEXTDOMAINDIR', '/usr/share/locale/'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'pt_BR.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('XDG_VTNR', '2'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/build/smartdata_test'), ('CLUTTER_IM_MODULE', 'xim'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('LC_NUMERIC', 'pt_BR.UTF-8'), ('PYTHONPATH', '/home/matheuswagner/ros2_dashing/ros2-linux/lib/python3.6/site-packages:/opt/ros/dashing/lib/python3.6/site-packages'), ('LC_PAPER', 'pt_BR.UTF-8'), ('BREAKPAD_DUMP_LOCATION', '/home/matheuswagner/.config/Code/exthost Crash Reports'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/matheuswagner/ros2_dashing/ros2-linux:/opt/ros/dashing')]), 'shell': False}
[0.092440] (smartdata_test) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target smartdata_test\x1b[0m\n'}
[0.100033] (-) TimerEvent: {}
[0.105586] (smartdata_test) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/smartdata_test.dir/src/smartdata_test.cpp.o\x1b[0m\n'}
[0.200139] (-) TimerEvent: {}
[0.300555] (-) TimerEvent: {}
[0.401032] (-) TimerEvent: {}
[0.501404] (-) TimerEvent: {}
[0.601761] (-) TimerEvent: {}
[0.702134] (-) TimerEvent: {}
[0.802554] (-) TimerEvent: {}
[0.902961] (-) TimerEvent: {}
[1.003331] (-) TimerEvent: {}
[1.103789] (-) TimerEvent: {}
[1.204172] (-) TimerEvent: {}
[1.304530] (-) TimerEvent: {}
[1.396985] (smartdata_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/7/bits/c++allocator.h:33:0\x1b[m\x1b[K,\n'}
[1.397447] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[1.397568] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/7/list:61\x1b[m\x1b[K,\n'}
[1.397701] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:4\x1b[m\x1b[K,\n'}
[1.397827] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1\x1b[m\x1b[K:\n'}
[1.397948] (smartdata_test) StderrLine: {'line': b'/usr/include/c++/7/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = Interest<std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {const Interest<std_msgs::msg::Float32_<std::allocator<void> > >&}; _Tp = std::_List_node<Interest<std_msgs::msg::Float32_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.398068] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/alloc_traits.h:475:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = Interest<std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {const Interest<std_msgs::msg::Float32_<std::allocator<void> > >&}; _Tp = std::_List_node<Interest<std_msgs::msg::Float32_<std::allocator<void> > > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<std::_List_node<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.398190] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/stl_list.h:575:33:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::list<_Tp, _Alloc>::_Node* std::__cxx11::list<_Tp, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {const Interest<std_msgs::msg::Float32_<std::allocator<void> > >&}; _Tp = Interest<std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > >; std::__cxx11::list<_Tp, _Alloc>::_Node = std::_List_node<Interest<std_msgs::msg::Float32_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.398308] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/stl_list.h:1801:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid std::__cxx11::list<_Tp, _Alloc>::_M_insert(std::__cxx11::list<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const Interest<std_msgs::msg::Float32_<std::allocator<void> > >&}; _Tp = Interest<std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > >; std::__cxx11::list<_Tp, _Alloc>::iterator = std::_List_iterator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.398423] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/stl_list.h:1068:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid std::__cxx11::list<_Tp, _Alloc>::push_front(const value_type&) [with _Tp = Interest<std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > >; std::__cxx11::list<_Tp, _Alloc>::value_type = Interest<std_msgs::msg::Float32_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.398559] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:37:37:\x1b[m\x1b[K   required from here\n'}
[1.398672] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/ext/new_allocator.h:136:4:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of deleted function \xe2\x80\x98\x1b[01m\x1b[KInterest<std_msgs::msg::Float32_<std::allocator<void> > >::Interest(const Interest<std_msgs::msg::Float32_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.398790] (smartdata_test) StderrLine: {'line': b'  { \x1b[01;31m\x1b[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K; }\n'}
[1.398911] (smartdata_test) StderrLine: {'line': b'    \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.399024] (smartdata_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1:0\x1b[m\x1b[K:\n'}
[1.399136] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:10:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KInterest<std_msgs::msg::Float32_<std::allocator<void> > >::Interest(const Interest<std_msgs::msg::Float32_<std::allocator<void> > >&)\x1b[m\x1b[K\xe2\x80\x99 is implicitly deleted because the default definition would be ill-formed:\n'}
[1.399277] (smartdata_test) StderrLine: {'line': b' class \x1b[01;36m\x1b[KInterest\x1b[m\x1b[K :  public rclcpp::Node\n'}
[1.399399] (smartdata_test) StderrLine: {'line': b'       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.399510] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:10:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krclcpp::Node::Node(const rclcpp::Node&)\x1b[m\x1b[K\xe2\x80\x99 is private within this context\n'}
[1.399625] (smartdata_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/context.hpp:33:0\x1b[m\x1b[K,\n'}
[1.399736] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/contexts/default_context.hpp:18\x1b[m\x1b[K,\n'}
[1.399846] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executor.hpp:32\x1b[m\x1b[K,\n'}
[1.399957] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/multi_threaded_executor.hpp:24\x1b[m\x1b[K,\n'}
[1.400072] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.400183] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[1.400296] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:7\x1b[m\x1b[K,\n'}
[1.400409] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1\x1b[m\x1b[K:\n'}
[1.400521] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:1193:23:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared private here\n'}
[1.400631] (smartdata_test) StderrLine: {'line': b'   RCLCPP_DISABLE_COPY(\x1b[01;36m\x1b[KN\x1b[m\x1b[Kode)\n'}
[1.400748] (smartdata_test) StderrLine: {'line': b'                       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.400859] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/macros.hpp:27:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin definition of macro \xe2\x80\x98\x1b[01m\x1b[KRCLCPP_DISABLE_COPY\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.400976] (smartdata_test) StderrLine: {'line': b'   \x1b[01;36m\x1b[K__VA_ARGS__\x1b[m\x1b[K(const __VA_ARGS__ &) = delete; \\\n'}
[1.401087] (smartdata_test) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.401200] (smartdata_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1:0\x1b[m\x1b[K:\n'}
[1.401313] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:10:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of deleted function \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Node::Node(const rclcpp::Node&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.401431] (smartdata_test) StderrLine: {'line': b' class \x1b[01;31m\x1b[KInterest\x1b[m\x1b[K :  public rclcpp::Node\n'}
[1.401543] (smartdata_test) StderrLine: {'line': b'       \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.401655] (smartdata_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/context.hpp:33:0\x1b[m\x1b[K,\n'}
[1.401767] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/contexts/default_context.hpp:18\x1b[m\x1b[K,\n'}
[1.401880] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executor.hpp:32\x1b[m\x1b[K,\n'}
[1.402008] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/multi_threaded_executor.hpp:24\x1b[m\x1b[K,\n'}
[1.402120] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.402231] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[1.402343] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:7\x1b[m\x1b[K,\n'}
[1.402460] (smartdata_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1\x1b[m\x1b[K:\n'}
[1.402572] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:1193:23:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[1.402685] (smartdata_test) StderrLine: {'line': b'   RCLCPP_DISABLE_COPY(\x1b[01;36m\x1b[KN\x1b[m\x1b[Kode)\n'}
[1.402795] (smartdata_test) StderrLine: {'line': b'                       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.402905] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/macros.hpp:27:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin definition of macro \xe2\x80\x98\x1b[01m\x1b[KRCLCPP_DISABLE_COPY\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.403018] (smartdata_test) StderrLine: {'line': b'   \x1b[01;36m\x1b[K__VA_ARGS__\x1b[m\x1b[K(const __VA_ARGS__ &) = delete; \\\n'}
[1.403136] (smartdata_test) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.404602] (-) TimerEvent: {}
[1.451897] (smartdata_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:1:0\x1b[m\x1b[K:\n'}
[1.452181] (smartdata_test) StderrLine: {'line': b'/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[KResponsiveSmartData<Transducer, Value, Message>::ResponsiveSmartData(unsigned int, int, int, int, std::__cxx11::list<Interest<Message> >*) [with Transducer = Dummy_Transducer<1, float>; Value = float; Message = std_msgs::msg::Float32_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.452289] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/ext/new_allocator.h:136:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452431] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/alloc_traits.h:475:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452568] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:526:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452696] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:637:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_count<_Lp>::__shared_count(std::_Sp_make_shared_tag, _Tp*, const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452849] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1295:35:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.452983] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:344:64:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.453114] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:690:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.453238] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:706:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.453361] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:39:134:\x1b[m\x1b[K   required from here\n'}
[1.453486] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:75:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >::bindNewInterest(std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > > >::iterator&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.453609] (smartdata_test) StderrLine: {'line': b'                 \x1b[01;31m\x1b[KbindNewInterest(it)\x1b[m\x1b[K;\n'}
[1.453729] (smartdata_test) StderrLine: {'line': b'                 \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~^~~~\x1b[m\x1b[K\n'}
[1.453848] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:91:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: void ResponsiveSmartData<Transducer, Value, Message>::bindNewInterest(Interest<Message>*) [with Transducer = Dummy_Transducer<1, float>; Value = float; Message = std_msgs::msg::Float32_<std::allocator<void> >]\n'}
[1.453981] (smartdata_test) StderrLine: {'line': b'         void \x1b[01;36m\x1b[KbindNewInterest\x1b[m\x1b[K(Interest<Message>* interest)\n'}
[1.454109] (smartdata_test) StderrLine: {'line': b'              \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.454241] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:91:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > > >::iterator {aka std::_List_iterator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > >}\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KInterest<std_msgs::msg::Float32_<std::allocator<void> > >*\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.462074] (smartdata_test) StderrLine: {'line': b'/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid ResponsiveSmartData<Transducer, Value, Message>::bindNewInterest(Interest<Message>*) [with Transducer = Dummy_Transducer<1, float>; Value = float; Message = std_msgs::msg::Float32_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.462329] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:75:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[KResponsiveSmartData<Transducer, Value, Message>::ResponsiveSmartData(unsigned int, int, int, int, std::__cxx11::list<Interest<Message> >*) [with Transducer = Dummy_Transducer<1, float>; Value = float; Message = std_msgs::msg::Float32_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.462491] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/ext/new_allocator.h:136:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.462637] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/alloc_traits.h:475:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.462782] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:526:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.462929] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:637:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_count<_Lp>::__shared_count(std::_Sp_make_shared_tag, _Tp*, const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.463067] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr_base.h:1295:35:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.463220] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:344:64:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}; _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.463374] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:690:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Alloc = std::allocator<ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.463516] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/bits/shared_ptr.h:706:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = ResponsiveSmartData<Dummy_Transducer<1, float>, float, std_msgs::msg::Float32_<std::allocator<void> > >; _Args = {int, int, int, int, std::__cxx11::list<Interest<std_msgs::msg::Float32_<std::allocator<void> > >, std::allocator<Interest<std_msgs::msg::Float32_<std::allocator<void> > > > >*}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.463651] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:39:134:\x1b[m\x1b[K   required from here\n'}
[1.463783] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:95:119:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[KISO C++ forbids taking the address of a bound member function to form a pointer to member function.  Say \xe2\x80\x98\x1b[01m\x1b[K&Interest<std_msgs::msg::Float32_<std::allocator<void> > >::publish\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[1.463923] (smartdata_test) StderrLine: {'line': b'             interestTimers->push_front(this->create_wall_timer(std::chrono::milliseconds(interest->period), std::bind(\x1b[01;31m\x1b[K&interest->publish\x1b[m\x1b[K, this)));\n'}
[1.464060] (smartdata_test) StderrLine: {'line': b'                                                                                                                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.469343] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/responsiveSmartData.h:93:17:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Kqueue_size\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-variable\x1b[m\x1b[K]\n'}
[1.469530] (smartdata_test) StderrLine: {'line': b'             int \x1b[01;35m\x1b[Kqueue_size\x1b[m\x1b[K = 10;\n'}
[1.469673] (smartdata_test) StderrLine: {'line': b'                 \x1b[01;35m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[1.504810] (-) TimerEvent: {}
[1.605226] (-) TimerEvent: {}
[1.623967] (smartdata_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:2:0\x1b[m\x1b[K:\n'}
[1.624246] (smartdata_test) StderrLine: {'line': b'/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/transducer.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid Transducer<_UNIT, Value>::actuate(const Value&) [with long unsigned int _UNIT = 1; Value = float]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.624403] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/smartdata_test.cpp:42:1:\x1b[m\x1b[K   required from here\n'}
[1.624558] (smartdata_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/smartdata_test/src/../../../include/transducer.h:18:43:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kvalue\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[1.624707] (smartdata_test) StderrLine: {'line': b'         virtual void actuate(const Value &\x1b[01;35m\x1b[Kvalue\x1b[m\x1b[K){}\n'}
[1.624855] (smartdata_test) StderrLine: {'line': b'                                           \x1b[01;35m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.705378] (-) TimerEvent: {}
[1.729670] (smartdata_test) StdoutLine: {'line': b"CMakeFiles/smartdata_test.dir/build.make:81: recipe for target 'CMakeFiles/smartdata_test.dir/src/smartdata_test.cpp.o' failed\n"}
[1.730106] (smartdata_test) StdoutLine: {'line': b"CMakeFiles/Makefile2:95: recipe for target 'CMakeFiles/smartdata_test.dir/all' failed\n"}
[1.730357] (smartdata_test) StderrLine: {'line': b'make[2]: *** [CMakeFiles/smartdata_test.dir/src/smartdata_test.cpp.o] Error 1\n'}
[1.730519] (smartdata_test) StderrLine: {'line': b'make[1]: *** [CMakeFiles/smartdata_test.dir/all] Error 2\n'}
[1.730648] (smartdata_test) StderrLine: {'line': b'make: *** [all] Error 2\n'}
[1.730810] (smartdata_test) StdoutLine: {'line': b"Makefile:159: recipe for target 'all' failed\n"}
[1.731854] (smartdata_test) CommandEnded: {'returncode': 2}
[1.809041] (-) TimerEvent: {}
[1.814077] (smartdata_test) JobEnded: {'identifier': 'smartdata_test', 'rc': 2}
[1.824751] (-) EventReactorShutdown: {}

[0.000000] (-) TimerEvent: {}
[0.000203] (-) JobUnselected: {'identifier': 'cubesat_actuators'}
[0.000272] (-) JobUnselected: {'identifier': 'cubesat_controllers'}
[0.000329] (-) JobUnselected: {'identifier': 'cubesat_description'}
[0.000376] (-) JobUnselected: {'identifier': 'cubesat_gazebo'}
[0.000421] (-) JobUnselected: {'identifier': 'smartdata_test'}
[0.000470] (cubesat_sensors) JobQueued: {'identifier': 'cubesat_sensors', 'dependencies': OrderedDict()}
[0.002338] (cubesat_sensors) JobStarted: {'identifier': 'cubesat_sensors'}
[0.069617] (cubesat_sensors) JobProgress: {'identifier': 'cubesat_sensors', 'progress': 'cmake'}
[0.070523] (cubesat_sensors) JobProgress: {'identifier': 'cubesat_sensors', 'progress': 'build'}
[0.071456] (cubesat_sensors) Command: {'cmd': ['/usr/local/bin/cmake', '--build', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/build/cubesat_sensors', '--', '-j8', '-l8'], 'cwd': '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/build/cubesat_sensors', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'matheuswagner'), ('LANGUAGE', 'en'), ('LC_TIME', 'pt_BR.UTF-8'), ('TEXTDOMAIN', 'im-config'), ('OSPL_INFOFILE', '<stdout>'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '4234'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/snap/code/88/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('LD_LIBRARY_PATH', '/home/matheuswagner/ros2_dashing/ros2-linux/opt/yaml_cpp_vendor/lib:/home/matheuswagner/ros2_dashing/ros2-linux/opt/rviz_ogre_vendor/lib:/usr/lib:/home/matheuswagner/ros2_dashing/ros2-linux/lib:/usr/lib/x86_64-linux-gnu/gazebo-9/plugins:/opt/ros/dashing/opt/yaml_cpp_vendor/lib:/opt/rti.com/rti_connext_dds-5.3.1/lib/x64Linux3gcc5.4.0:/opt/ros/dashing/lib:/home/matheuswagner/Downloads/omnetpp-4.6-src/omnetpp-4.6/lib'), ('SHLVL', '1'), ('OLDPWD', '/home/matheuswagner/repos/adaptive-cubesat-adcs'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('OSPL_URI', 'file:///home/matheuswagner/ros2_dashing/ros2-linux/share/opensplice_cmake_module/config/ros_ospl.xml'), ('QT4_IM_MODULE', 'xim'), ('HOME', '/home/matheuswagner'), ('DESKTOP_SESSION', 'ubuntu'), ('TERM_PROGRAM_VERSION', '1.64.2'), ('GIO_LAUNCHED_DESKTOP_FILE', '/var/lib/snapd/desktop/applications/code_code.desktop'), ('OSPL_VERBOSITY', '2'), ('NDDSHOME', '/opt/rti.com/rti_connext_dds-5.3.1'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL', 'true'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/snap/code/88/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('ROS_PYTHON_VERSION', '3'), ('LC_MONETARY', 'pt_BR.UTF-8'), ('LC_CTYPE', 'pt_BR.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/snap/code/88/usr/share/code/code'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('OSPL_TMPL_PATH', '/usr/etc/opensplice/idlpp'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '5791'), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('COLCON_PREFIX_PATH', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install:/home/matheuswagner/ros2_dashing/ros2-linux'), ('IM_CONFIG_PHASE', '2'), ('ROS_DISTRO', 'dashing'), ('LOGNAME', 'matheuswagner'), ('GTK_IM_MODULE', 'ibus'), ('_', '/home/matheuswagner/.local/bin/colcon'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('ROS_VERSION', '2'), ('PKG_CONFIG_PATH', '/home/matheuswagner/ros2_dashing/ros2-linux/lib/x86_64-linux-gnu/pkgconfig:/home/matheuswagner/ros2_dashing/ros2-linux/lib/pkgconfig'), ('USERNAME', 'matheuswagner'), ('XDG_SESSION_ID', '2'), ('TERM', 'xterm-256color'), ('OSPL_ERRORFILE', '<stderr>'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '2'), ('PATH', '/home/matheuswagner/ros2_dashing/ros2-linux/bin:/opt/rti.com/rti_connext_dds-5.3.1/lib/x64Linux3gcc5.4.0:/opt/rti.com/rti_connext_dds-5.3.1/bin:/opt/ros/dashing/bin:/home/matheuswagner/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/matheuswagner/Downloads/omnetpp-4.6-src/omnetpp-4.6/bin'), ('PAPERSIZE', 'a4'), ('SESSION_MANAGER', 'local/matheuswagner-Inspiron-7572:@/tmp/.ICE-unix/4156,unix/matheuswagner-Inspiron-7572:/tmp/.ICE-unix/4156'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'pt_BR.UTF-8'), ('BAMF_DESKTOP_FILE_HINT', '/var/lib/snapd/desktop/applications/code_code.desktop'), ('GDK_BACKEND', 'x11'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('OSPL_HOME', '/usr'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'pt_BR.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('TERM_PROGRAM', 'vscode'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XMODIFIERS', '@im=ibus'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-c7856e65b5.sock'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('AMENT_PREFIX_PATH', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/smartdata_test:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_gazebo:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_description:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_controller:/home/matheuswagner/ros2_dashing/ros2-linux:/opt/ros/dashing'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('GSETTINGS_SCHEMA_DIR', '/snap/code/88/usr/share/glib-2.0/schemas'), ('DISABLE_WAYLAND', '1'), ('LC_NAME', 'pt_BR.UTF-8'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'pt_BR.UTF-8'), ('TEXTDOMAINDIR', '/usr/share/locale/'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'pt_BR.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('XDG_VTNR', '2'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/build/cubesat_sensors'), ('CLUTTER_IM_MODULE', 'xim'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('LC_NUMERIC', 'pt_BR.UTF-8'), ('PYTHONPATH', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_description/lib/python3.6/site-packages:/home/matheuswagner/ros2_dashing/ros2-linux/lib/python3.6/site-packages:/opt/ros/dashing/lib/python3.6/site-packages'), ('LC_PAPER', 'pt_BR.UTF-8'), ('BREAKPAD_DUMP_LOCATION', '/home/matheuswagner/.config/Code/exthost Crash Reports'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/smartdata_test:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_gazebo:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_controller:/home/matheuswagner/ros2_dashing/ros2-linux:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_description:/opt/ros/dashing')]), 'shell': False}
[0.099641] (-) TimerEvent: {}
[0.160853] (cubesat_sensors) StdoutLine: {'line': b'-- Found rclcpp: 0.7.16 (/home/matheuswagner/ros2_dashing/ros2-linux/share/rclcpp/cmake)\n'}
[0.194032] (cubesat_sensors) StdoutLine: {'line': b'-- Using PYTHON_EXECUTABLE: /usr/bin/python3\n'}
[0.199774] (-) TimerEvent: {}
[0.300209] (-) TimerEvent: {}
[0.400558] (-) TimerEvent: {}
[0.500997] (-) TimerEvent: {}
[0.601804] (-) TimerEvent: {}
[0.702648] (-) TimerEvent: {}
[0.803453] (-) TimerEvent: {}
[0.904279] (-) TimerEvent: {}
[0.964371] (cubesat_sensors) StdoutLine: {'line': b'-- Found rosidl_adapter: 0.7.10 (/home/matheuswagner/ros2_dashing/ros2-linux/share/rosidl_adapter/cmake)\n'}
[1.004487] (-) TimerEvent: {}
[1.105479] (-) TimerEvent: {}
[1.206367] (-) TimerEvent: {}
[1.307141] (-) TimerEvent: {}
[1.323673] (cubesat_sensors) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 0.7.2 (/home/matheuswagner/ros2_dashing/ros2-linux/share/rmw_implementation_cmake/cmake)\n'}
[1.363011] (cubesat_sensors) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[1.407386] (-) TimerEvent: {}
[1.432774] (cubesat_sensors) StdoutLine: {'line': b'-- Looking for pthread.h\n'}
[1.507640] (-) TimerEvent: {}
[1.608408] (-) TimerEvent: {}
[1.643780] (cubesat_sensors) StdoutLine: {'line': b'-- Looking for pthread.h - found\n'}
[1.644202] (cubesat_sensors) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n'}
[1.708526] (-) TimerEvent: {}
[1.735784] (cubesat_sensors) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\n'}
[1.736082] (cubesat_sensors) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads\n'}
[1.785964] (cubesat_sensors) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads - not found\n'}
[1.786305] (cubesat_sensors) StdoutLine: {'line': b'-- Looking for pthread_create in pthread\n'}
[1.808622] (-) TimerEvent: {}
[1.860885] (cubesat_sensors) StdoutLine: {'line': b'-- Looking for pthread_create in pthread - found\n'}
[1.861874] (cubesat_sensors) StdoutLine: {'line': b'-- Found Threads: TRUE  \n'}
[1.908733] (-) TimerEvent: {}
[1.948019] (cubesat_sensors) StdoutLine: {'line': b'-- Found std_msgs: 0.7.1 (/home/matheuswagner/ros2_dashing/ros2-linux/share/std_msgs/cmake)\n'}
[1.965611] (cubesat_sensors) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.7.12 (/home/matheuswagner/ros2_dashing/ros2-linux/share/ament_lint_auto/cmake)\n'}
[2.008851] (-) TimerEvent: {}
[2.109207] (-) TimerEvent: {}
[2.133078] (cubesat_sensors) StdoutLine: {'line': b"-- Added test 'copyright' to check for copyright in CMake / C / C++ / Python code\n"}
[2.134080] (cubesat_sensors) StdoutLine: {'line': b"-- Added test 'cppcheck' to perform static code analysis on C / C++ code\n"}
[2.134216] (cubesat_sensors) StdoutLine: {'line': b'-- Configured cppcheck include dirs: \n'}
[2.134986] (cubesat_sensors) StdoutLine: {'line': b"-- Added test 'cpplint' to check C / C++ code against the Google style\n"}
[2.135596] (cubesat_sensors) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[2.136599] (cubesat_sensors) StdoutLine: {'line': b"-- Added test 'uncrustify' to check C / C++ code style\n"}
[2.137005] (cubesat_sensors) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[2.137863] (cubesat_sensors) StdoutLine: {'line': b'-- Configuring done\n'}
[2.209367] (-) TimerEvent: {}
[2.309910] (-) TimerEvent: {}
[2.410583] (-) TimerEvent: {}
[2.511470] (-) TimerEvent: {}
[2.612372] (-) TimerEvent: {}
[2.618735] (cubesat_sensors) StdoutLine: {'line': b'-- Generating done\n'}
[2.625805] (cubesat_sensors) StdoutLine: {'line': b'-- Build files have been written to: /home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/build/cubesat_sensors\n'}
[2.673203] (cubesat_sensors) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target imu_adapter\x1b[0m\n'}
[2.712581] (-) TimerEvent: {}
[2.813426] (-) TimerEvent: {}
[2.914318] (-) TimerEvent: {}
[3.015094] (-) TimerEvent: {}
[3.115506] (-) TimerEvent: {}
[3.216248] (-) TimerEvent: {}
[3.317003] (-) TimerEvent: {}
[3.417751] (-) TimerEvent: {}
[3.518392] (-) TimerEvent: {}
[3.618939] (-) TimerEvent: {}
[3.719398] (-) TimerEvent: {}
[3.820090] (-) TimerEvent: {}
[3.920749] (-) TimerEvent: {}
[4.021550] (-) TimerEvent: {}
[4.122562] (-) TimerEvent: {}
[4.137985] (cubesat_sensors) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/imu_adapter.dir/src/imu_adapter.cpp.o\x1b[0m\n'}
[4.222661] (-) TimerEvent: {}
[4.323025] (-) TimerEvent: {}
[4.423527] (-) TimerEvent: {}
[4.524318] (-) TimerEvent: {}
[4.625121] (-) TimerEvent: {}
[4.725833] (-) TimerEvent: {}
[4.826525] (-) TimerEvent: {}
[4.926878] (-) TimerEvent: {}
[5.027232] (-) TimerEvent: {}
[5.127564] (-) TimerEvent: {}
[5.227868] (-) TimerEvent: {}
[5.328232] (-) TimerEvent: {}
[5.428496] (-) TimerEvent: {}
[5.528775] (-) TimerEvent: {}
[5.629165] (-) TimerEvent: {}
[5.729503] (-) TimerEvent: {}
[5.829825] (-) TimerEvent: {}
[5.888883] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::ImuAdapter()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.889291] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:21:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.890137] (cubesat_sensors) StderrLine: {'line': b'       subcription = this->create_subscription<std_msgs::msg::\x1b[01;31m\x1b[KString\x1b[m\x1b[K>(\n'}
[5.890746] (cubesat_sensors) StderrLine: {'line': b'                                                              \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.890837] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:21:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.890925] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:22:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K_1\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[5.891012] (cubesat_sensors) StderrLine: {'line': b'       "imu_plugin/out", 10, std::bind(&ImuAdapter::AtMessageArival, this, \x1b[01;31m\x1b[K_1\x1b[m\x1b[K));\n'}
[5.891098] (cubesat_sensors) StderrLine: {'line': b'                                                                           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.891183] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:22:75:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternative:\n'}
[5.891272] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:2:0\x1b[m\x1b[K:\n'}
[5.891357] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/7/functional:275:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::placeholders::_1\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.891457] (cubesat_sensors) StderrLine: {'line': b'     extern const _Placeholder<1> \x1b[01;36m\x1b[K_1\x1b[m\x1b[K;\n'}
[5.891559] (cubesat_sensors) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~\x1b[m\x1b[K\n'}
[5.891651] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:24:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.891737] (cubesat_sensors) StderrLine: {'line': b'       velocityXPublisher = this->create_publisher<std_msgs::msg::\x1b[01;31m\x1b[KString\x1b[m\x1b[K>("imu_velocity_x", 10);\n'}
[5.891827] (cubesat_sensors) StderrLine: {'line': b'                                                                  \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.891911] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:24:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.892004] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:24:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::create_publisher<<expression error> >(const char [15], int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.892095] (cubesat_sensors) StderrLine: {'line': b'       velocityXPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_x", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.892180] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.892266] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.892350] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.892435] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.892520] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.892605] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\n'}
[5.892696] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.892781] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.892870] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.893007] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:24:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.893102] (cubesat_sensors) StderrLine: {'line': b'       velocityXPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_x", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.893191] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.893274] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.893358] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.893442] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.893526] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.893608] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, size_t, std::shared_ptr<_Up>)\n'}
[5.893694] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.893777] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.893862] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.893947] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:24:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.894036] (cubesat_sensors) StderrLine: {'line': b'       velocityXPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_x", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.894122] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.894206] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.894290] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.894374] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.894458] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.894546] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>)\n'}
[5.894678] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.894780] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.894878] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.894981] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:24:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.895084] (cubesat_sensors) StderrLine: {'line': b'       velocityXPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_x", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.895183] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.895280] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:25:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.895379] (cubesat_sensors) StderrLine: {'line': b'       velocityYPublisher = this->create_publisher<std_msgs::msg::\x1b[01;31m\x1b[KString\x1b[m\x1b[K>("imu_velocity_y", 10);\n'}
[5.895477] (cubesat_sensors) StderrLine: {'line': b'                                                                  \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.895587] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:25:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.895690] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:25:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::create_publisher<<expression error> >(const char [15], int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.895799] (cubesat_sensors) StderrLine: {'line': b'       velocityYPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_y", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.895899] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.895998] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.896097] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.896196] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.896294] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.896392] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\n'}
[5.896506] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.896816] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.897283] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.897383] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:25:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.897464] (cubesat_sensors) StderrLine: {'line': b'       velocityYPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_y", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.897546] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.897629] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.897712] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.897803] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.897886] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.897969] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, size_t, std::shared_ptr<_Up>)\n'}
[5.898059] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.898141] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.898223] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.898307] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:25:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.898389] (cubesat_sensors) StderrLine: {'line': b'       velocityYPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_y", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.898472] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.898553] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.898636] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.898718] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.898801] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.898882] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>)\n'}
[5.898967] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.899057] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.899140] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.899223] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:25:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.899306] (cubesat_sensors) StderrLine: {'line': b'       velocityYPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_y", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.899388] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.899469] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:26:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.899563] (cubesat_sensors) StderrLine: {'line': b'       velocityZPublisher = this->create_publisher<std_msgs::msg::\x1b[01;31m\x1b[KString\x1b[m\x1b[K>("imu_velocity_z", 10);\n'}
[5.899656] (cubesat_sensors) StderrLine: {'line': b'                                                                  \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.899740] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:26:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.899823] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:26:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::create_publisher<<expression error> >(const char [15], int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.899909] (cubesat_sensors) StderrLine: {'line': b'       velocityZPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_z", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.899991] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.900072] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.900154] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.900237] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.900318] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.900400] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\n'}
[5.900490] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.900577] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.900659] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.900742] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:26:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.900824] (cubesat_sensors) StderrLine: {'line': b'       velocityZPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_z", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.900906] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.901016] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.901144] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.901229] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.901312] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.901394] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, size_t, std::shared_ptr<_Up>)\n'}
[5.901485] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.901568] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.901650] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.901732] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:26:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.901815] (cubesat_sensors) StderrLine: {'line': b'       velocityZPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_z", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.901898] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.901985] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.902068] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.902151] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.902233] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.902315] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>)\n'}
[5.902407] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.902490] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.902572] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.902655] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:26:94:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.902737] (cubesat_sensors) StderrLine: {'line': b'       velocityZPublisher = this->create_publisher<std_msgs::msg::String>("imu_velocity_z", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.902818] (cubesat_sensors) StderrLine: {'line': b'                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.902899] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:28:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.902982] (cubesat_sensors) StderrLine: {'line': b'       orientationOPublisher = this->create_publisher<std_msgs::msg::\x1b[01;31m\x1b[KString\x1b[m\x1b[K>("imu_orientation_o", 10);\n'}
[5.903070] (cubesat_sensors) StderrLine: {'line': b'                                                                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.903152] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:28:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.903234] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:28:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::create_publisher<<expression error> >(const char [18], int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.903318] (cubesat_sensors) StderrLine: {'line': b'       orientationOPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_o", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.903399] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.903481] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.903576] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.903662] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.903744] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.903826] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\n'}
[5.903919] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.904001] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.904082] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.904165] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:28:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.904254] (cubesat_sensors) StderrLine: {'line': b'       orientationOPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_o", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.904337] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.904418] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.904499] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.904581] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.904662] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.904744] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, size_t, std::shared_ptr<_Up>)\n'}
[5.904827] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.904907] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.904988] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.905071] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:28:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.905154] (cubesat_sensors) StderrLine: {'line': b'       orientationOPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_o", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.905235] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.905316] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.905397] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.905485] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.905567] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.905650] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>)\n'}
[5.905746] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.905825] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.905903] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.905981] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:28:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.906059] (cubesat_sensors) StderrLine: {'line': b'       orientationOPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_o", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.906138] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.906216] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:29:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.906296] (cubesat_sensors) StderrLine: {'line': b'       orientationXPublisher = this->create_publisher<std_msgs::msg::\x1b[01;31m\x1b[KString\x1b[m\x1b[K>("imu_orientation_x", 10);\n'}
[5.906374] (cubesat_sensors) StderrLine: {'line': b'                                                                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.906457] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:29:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.906542] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:29:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::create_publisher<<expression error> >(const char [18], int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.906625] (cubesat_sensors) StderrLine: {'line': b'       orientationXPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_x", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.906704] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.906782] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.906860] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.906942] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.907021] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.907100] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\n'}
[5.907183] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.907262] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.907341] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.907419] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:29:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.907499] (cubesat_sensors) StderrLine: {'line': b'       orientationXPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_x", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.907589] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.907671] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.907754] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.907833] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.907911] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.907990] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, size_t, std::shared_ptr<_Up>)\n'}
[5.908071] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.908151] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.908230] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.908308] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:29:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.908388] (cubesat_sensors) StderrLine: {'line': b'       orientationXPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_x", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.908467] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.908551] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.908630] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.908709] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.908793] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.908880] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>)\n'}
[5.909013] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.909093] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.909171] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.909250] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:29:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.909329] (cubesat_sensors) StderrLine: {'line': b'       orientationXPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_x", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.909407] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.909484] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:30:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.909563] (cubesat_sensors) StderrLine: {'line': b'       orientationYPublisher = this->create_publisher<std_msgs::msg::\x1b[01;31m\x1b[KString\x1b[m\x1b[K>("imu_orientation_y", 10);\n'}
[5.909653] (cubesat_sensors) StderrLine: {'line': b'                                                                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.909728] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:30:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.909804] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:30:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::create_publisher<<expression error> >(const char [18], int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.909882] (cubesat_sensors) StderrLine: {'line': b'       orientationYPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_y", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.909958] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.910039] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.910119] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.910196] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.910272] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.910347] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\n'}
[5.910425] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.910500] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.910575] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.910652] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:30:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.910728] (cubesat_sensors) StderrLine: {'line': b'       orientationYPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_y", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.910804] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.910883] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.910959] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.911035] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.911115] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.911195] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, size_t, std::shared_ptr<_Up>)\n'}
[5.911296] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.911386] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.911478] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.911580] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:30:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.911681] (cubesat_sensors) StderrLine: {'line': b'       orientationYPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_y", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.911774] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.911866] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.911958] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.912051] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.912144] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.912236] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>)\n'}
[5.912333] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.912425] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.912516] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.912609] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:30:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.912704] (cubesat_sensors) StderrLine: {'line': b'       orientationYPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_y", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.912796] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.912887] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:31:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.912980] (cubesat_sensors) StderrLine: {'line': b'       orientationZPublisher = this->create_publisher<std_msgs::msg::\x1b[01;31m\x1b[KString\x1b[m\x1b[K>("imu_orientation_z", 10);\n'}
[5.913072] (cubesat_sensors) StderrLine: {'line': b'                                                                     \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[5.913163] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:31:69:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KString\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.913256] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:31:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::create_publisher<<expression error> >(const char [18], int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.913359] (cubesat_sensors) StderrLine: {'line': b'       orientationZPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_z", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.913453] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.913540] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.913632] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.913724] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.913821] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.913914] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rclcpp::QoS&, const rclcpp::PublisherOptionsWithAllocator<AllocatorT>&)\n'}
[5.914006] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.914120] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.914201] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:177:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.914280] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:31:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.914359] (cubesat_sensors) StderrLine: {'line': b'       orientationZPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_z", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.914438] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.914515] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.914599] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.914674] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.914755] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.914859] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, size_t, std::shared_ptr<_Up>)\n'}
[5.914955] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.915050] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.915137] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:198:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.915225] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:31:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.915321] (cubesat_sensors) StderrLine: {'line': b'       orientationZPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_z", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.915410] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.915498] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[5.915601] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[5.915690] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[5.915777] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[5.915865] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class AllocatorT, class PublisherT> std::shared_ptr<PublisherT> rclcpp::Node::create_publisher(const string&, const rmw_qos_profile_t&, std::shared_ptr<_Up>)\n'}
[5.915960] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_publisher\x1b[m\x1b[K(\n'}
[5.916049] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.916135] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:217:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.916223] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:31:100:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[5.916310] (cubesat_sensors) StderrLine: {'line': b'       orientationZPublisher = this->create_publisher<std_msgs::msg::String>("imu_orientation_z", 10\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.916398] (cubesat_sensors) StderrLine: {'line': b'                                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.916536] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid ImuAdapter::AtMessageArival(sensor_msgs::msg::Imu)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.916625] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:59:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.916704] (cubesat_sensors) StderrLine: {'line': b'       this->BuildEmptyPacket(messageVelocityX\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.916786] (cubesat_sensors) StderrLine: {'line': b'                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.916861] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: void ImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray*)\n'}
[5.916937] (cubesat_sensors) StderrLine: {'line': b'     void \x1b[01;36m\x1b[KBuildEmptyPacket\x1b[m\x1b[K(std_msgs::msg::Float32MultiArray *message)\n'}
[5.917011] (cubesat_sensors) StderrLine: {'line': b'          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.917085] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray* {aka std_msgs::msg::Float32MultiArray_<std::allocator<void> >*}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.917167] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:60:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.917245] (cubesat_sensors) StderrLine: {'line': b'       messageVelocityX\x1b[01;31m\x1b[K->\x1b[m\x1b[Kdata[6] = msg->angular_velocity.x\n'}
[5.917320] (cubesat_sensors) StderrLine: {'line': b'                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.917394] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:60:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu {aka sensor_msgs::msg::Imu_<std::allocator<void> >}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.917472] (cubesat_sensors) StderrLine: {'line': b'       messageVelocityX->data[6] = msg\x1b[01;31m\x1b[K->\x1b[m\x1b[Kangular_velocity.x\n'}
[5.917545] (cubesat_sensors) StderrLine: {'line': b'                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.917620] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:64:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.917702] (cubesat_sensors) StderrLine: {'line': b'       this->BuildEmptyPacket(messageVelocityY\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.917778] (cubesat_sensors) StderrLine: {'line': b'                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.917858] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: void ImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray*)\n'}
[5.917934] (cubesat_sensors) StderrLine: {'line': b'     void \x1b[01;36m\x1b[KBuildEmptyPacket\x1b[m\x1b[K(std_msgs::msg::Float32MultiArray *message)\n'}
[5.918012] (cubesat_sensors) StderrLine: {'line': b'          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.918087] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray* {aka std_msgs::msg::Float32MultiArray_<std::allocator<void> >*}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.918170] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:65:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.918247] (cubesat_sensors) StderrLine: {'line': b'       messageVelocityY\x1b[01;31m\x1b[K->\x1b[m\x1b[Kdata[6] = msg->angular_velocity.y\n'}
[5.918322] (cubesat_sensors) StderrLine: {'line': b'                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.918397] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:65:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu {aka sensor_msgs::msg::Imu_<std::allocator<void> >}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.918478] (cubesat_sensors) StderrLine: {'line': b'       messageVelocityY->data[6] = msg\x1b[01;31m\x1b[K->\x1b[m\x1b[Kangular_velocity.y\n'}
[5.918553] (cubesat_sensors) StderrLine: {'line': b'                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.918628] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:69:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.918716] (cubesat_sensors) StderrLine: {'line': b'       this->BuildEmptyPacket(messageVelocityZ\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.918789] (cubesat_sensors) StderrLine: {'line': b'                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.918860] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: void ImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray*)\n'}
[5.918932] (cubesat_sensors) StderrLine: {'line': b'     void \x1b[01;36m\x1b[KBuildEmptyPacket\x1b[m\x1b[K(std_msgs::msg::Float32MultiArray *message)\n'}
[5.919005] (cubesat_sensors) StderrLine: {'line': b'          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.919076] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray* {aka std_msgs::msg::Float32MultiArray_<std::allocator<void> >*}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.919151] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:70:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.919225] (cubesat_sensors) StderrLine: {'line': b'       messageVelocityZ\x1b[01;31m\x1b[K->\x1b[m\x1b[Kdata[6] = msg->angular_velocity.z\n'}
[5.919302] (cubesat_sensors) StderrLine: {'line': b'                       \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.919374] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:70:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu {aka sensor_msgs::msg::Imu_<std::allocator<void> >}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.919448] (cubesat_sensors) StderrLine: {'line': b'       messageVelocityZ->data[6] = msg\x1b[01;31m\x1b[K->\x1b[m\x1b[Kangular_velocity.z\n'}
[5.919520] (cubesat_sensors) StderrLine: {'line': b'                                      \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.919605] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:74:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.919686] (cubesat_sensors) StderrLine: {'line': b'       this->BuildEmptyPacket(messageOrientationO\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.919759] (cubesat_sensors) StderrLine: {'line': b'                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.919831] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: void ImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray*)\n'}
[5.919907] (cubesat_sensors) StderrLine: {'line': b'     void \x1b[01;36m\x1b[KBuildEmptyPacket\x1b[m\x1b[K(std_msgs::msg::Float32MultiArray *message)\n'}
[5.919981] (cubesat_sensors) StderrLine: {'line': b'          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.920053] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray* {aka std_msgs::msg::Float32MultiArray_<std::allocator<void> >*}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.920129] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:75:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.920203] (cubesat_sensors) StderrLine: {'line': b'       messageOrientationO\x1b[01;31m\x1b[K->\x1b[m\x1b[Kdata[6] = msg->orientation.w\n'}
[5.920276] (cubesat_sensors) StderrLine: {'line': b'                          \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.920347] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:75:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu {aka sensor_msgs::msg::Imu_<std::allocator<void> >}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.920430] (cubesat_sensors) StderrLine: {'line': b'       messageOrientationO->data[6] = msg\x1b[01;31m\x1b[K->\x1b[m\x1b[Korientation.w\n'}
[5.920503] (cubesat_sensors) StderrLine: {'line': b'                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.920576] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:79:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.920654] (cubesat_sensors) StderrLine: {'line': b'       this->BuildEmptyPacket(messageOrientationX\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.920726] (cubesat_sensors) StderrLine: {'line': b'                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.920798] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: void ImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray*)\n'}
[5.920871] (cubesat_sensors) StderrLine: {'line': b'     void \x1b[01;36m\x1b[KBuildEmptyPacket\x1b[m\x1b[K(std_msgs::msg::Float32MultiArray *message)\n'}
[5.920943] (cubesat_sensors) StderrLine: {'line': b'          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.921016] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray* {aka std_msgs::msg::Float32MultiArray_<std::allocator<void> >*}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.921093] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:80:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.921166] (cubesat_sensors) StderrLine: {'line': b'       messageOrientationX\x1b[01;31m\x1b[K->\x1b[m\x1b[Kdata[6] = msg->orientation.x\n'}
[5.921242] (cubesat_sensors) StderrLine: {'line': b'                          \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.921314] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:80:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu {aka sensor_msgs::msg::Imu_<std::allocator<void> >}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.921390] (cubesat_sensors) StderrLine: {'line': b'       messageOrientationX->data[6] = msg\x1b[01;31m\x1b[K->\x1b[m\x1b[Korientation.x\n'}
[5.921463] (cubesat_sensors) StderrLine: {'line': b'                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.921537] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:84:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.921615] (cubesat_sensors) StderrLine: {'line': b'       this->BuildEmptyPacket(messageOrientationY\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.921692] (cubesat_sensors) StderrLine: {'line': b'                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.921765] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: void ImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray*)\n'}
[5.921842] (cubesat_sensors) StderrLine: {'line': b'     void \x1b[01;36m\x1b[KBuildEmptyPacket\x1b[m\x1b[K(std_msgs::msg::Float32MultiArray *message)\n'}
[5.921914] (cubesat_sensors) StderrLine: {'line': b'          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.921986] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray* {aka std_msgs::msg::Float32MultiArray_<std::allocator<void> >*}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.922061] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:85:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.922135] (cubesat_sensors) StderrLine: {'line': b'       messageOrientationY\x1b[01;31m\x1b[K->\x1b[m\x1b[Kdata[6] = msg->orientation.y\n'}
[5.922206] (cubesat_sensors) StderrLine: {'line': b'                          \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.922278] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:85:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu {aka sensor_msgs::msg::Imu_<std::allocator<void> >}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.922356] (cubesat_sensors) StderrLine: {'line': b'       messageOrientationY->data[6] = msg\x1b[01;31m\x1b[K->\x1b[m\x1b[Korientation.y\n'}
[5.922429] (cubesat_sensors) StderrLine: {'line': b'                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.922501] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:89:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.922576] (cubesat_sensors) StderrLine: {'line': b'       this->BuildEmptyPacket(messageOrientationZ\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[5.922647] (cubesat_sensors) StderrLine: {'line': b'                                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[5.922719] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: void ImuAdapter::BuildEmptyPacket(std_msgs::msg::Float32MultiArray*)\n'}
[5.922792] (cubesat_sensors) StderrLine: {'line': b'     void \x1b[01;36m\x1b[KBuildEmptyPacket\x1b[m\x1b[K(std_msgs::msg::Float32MultiArray *message)\n'}
[5.922864] (cubesat_sensors) StderrLine: {'line': b'          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.922935] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:35:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray* {aka std_msgs::msg::Float32MultiArray_<std::allocator<void> >*}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.923009] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:90:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float32MultiArray_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.923087] (cubesat_sensors) StderrLine: {'line': b'       messageOrientationZ\x1b[01;31m\x1b[K->\x1b[m\x1b[Kdata[6] = msg->orientation.z\n'}
[5.923159] (cubesat_sensors) StderrLine: {'line': b'                          \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.923231] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:90:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kbase operand of \xe2\x80\x98\x1b[01m\x1b[K->\x1b[m\x1b[K\xe2\x80\x99 has non-pointer type \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs::msg::Imu {aka sensor_msgs::msg::Imu_<std::allocator<void> >}\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.923306] (cubesat_sensors) StderrLine: {'line': b'       messageOrientationZ->data[6] = msg\x1b[01;31m\x1b[K->\x1b[m\x1b[Korientation.z\n'}
[5.923379] (cubesat_sensors) StderrLine: {'line': b'                                         \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[5.929897] (-) TimerEvent: {}
[6.030178] (-) TimerEvent: {}
[6.130504] (-) TimerEvent: {}
[6.164319] (cubesat_sensors) StdoutLine: {'line': b"CMakeFiles/imu_adapter.dir/build.make:81: recipe for target 'CMakeFiles/imu_adapter.dir/src/imu_adapter.cpp.o' failed\n"}
[6.164677] (cubesat_sensors) StderrLine: {'line': b'make[2]: *** [CMakeFiles/imu_adapter.dir/src/imu_adapter.cpp.o] Error 1\n'}
[6.164884] (cubesat_sensors) StdoutLine: {'line': b"CMakeFiles/Makefile2:95: recipe for target 'CMakeFiles/imu_adapter.dir/all' failed\n"}
[6.164998] (cubesat_sensors) StderrLine: {'line': b'make[1]: *** [CMakeFiles/imu_adapter.dir/all] Error 2\n'}
[6.165092] (cubesat_sensors) StdoutLine: {'line': b"Makefile:159: recipe for target 'all' failed\n"}
[6.165184] (cubesat_sensors) StderrLine: {'line': b'make: *** [all] Error 2\n'}
[6.165996] (cubesat_sensors) CommandEnded: {'returncode': 2}
[6.235700] (-) TimerEvent: {}
[6.242487] (cubesat_sensors) JobEnded: {'identifier': 'cubesat_sensors', 'rc': 2}
[6.253245] (-) EventReactorShutdown: {}

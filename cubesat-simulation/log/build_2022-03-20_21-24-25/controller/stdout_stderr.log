[35m[1mScanning dependencies of target controller[0m
[ 50%] [32mBuilding CXX object CMakeFiles/controller.dir/src/controller.cpp.o[0m
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/smartdata.h:5[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/local_smartdata.h:4[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/controller.cpp:1[m[K:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/observer.h:[m[K In member function â€˜[01m[Kvirtual void Observer::notify(int)[m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/observer.h:8:33:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kid[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
    8 |         virtual void notify([01;35m[Kint id[m[K){};
      |                             [01;35m[K~~~~^~[m[K
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/local_smartdata.h:4[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/controller.cpp:1[m[K:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/smartdata.h:[m[K In member function â€˜[01m[Kvirtual float SmartData::value()[m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/smartdata.h:34:31:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
   34 |         virtual float value(){[01;35m[K}[m[K
      |                               [01;35m[K^[m[K
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/smartdata.h:[m[K In member function â€˜[01m[Kvirtual float SmartData::update()[m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/smartdata.h:36:32:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
   36 |         virtual float update(){[01;35m[K}[m[K
      |                                [01;35m[K^[m[K
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/smartdata.h:[m[K In member function â€˜[01m[Kvirtual void SmartData::setValue(float)[m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/smartdata.h:38:37:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kvalue[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   38 |         virtual void setValue([01;35m[Kfloat value[m[K){}
      |                               [01;35m[K~~~~~~^~~~~[m[K
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/controller.cpp:11[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:[m[K At global scope:
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:35:43:[m[K [01;31m[Kerror: [m[Kexpected template-name before â€˜[01m[K<[m[Kâ€™ token
   35 | class QuaternionBase : public RotationBase[01;31m[K<[m[KDerived, 3>
      |                                           [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:35:43:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K<[m[Kâ€™ token
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/controller.cpp:11[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:227:2:[m[K [01;35m[Kwarning: [m[Kextra â€˜[01m[K;[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  227 | }[01;35m[K;[m[K
      |  [01;35m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:260:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ktraits[m[Kâ€™ is not a class template
  260 | struct [01;31m[Ktraits[m[K<Quaternion<_Scalar,_Options> >
      |        [01;31m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:260:15:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KQuaternion[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[KQuaternionBase[m[Kâ€™?
  260 | struct traits<[01;31m[KQuaternion[m[K<_Scalar,_Options> >
      |               [01;31m[K^~~~~~~~~~[m[K
      |               [32m[KQuaternionBase[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:260:44:[m[K [01;31m[Kerror: [m[Kexpected unqualified-id before â€˜[01m[K>[m[Kâ€™ token
  260 | struct traits<Quaternion<_Scalar,_Options> [01;31m[K>[m[K
      |                                            [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:269:2:[m[K [01;35m[Kwarning: [m[Kextra â€˜[01m[K;[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  269 | }[01;35m[K;[m[K
      |  [01;35m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:277:27:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEigen::internal::traits[m[Kâ€™ is not a template
  277 |   enum { NeedsAlignment = [01;31m[Kinternal[m[K::traits<Quaternion>::Alignment>0 };
      |                           [01;31m[K^~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:277:57:[m[K [01;31m[Kerror: [m[Kincomplete type â€˜[01m[KEigen::internal::traits[m[Kâ€™ used in nested name specifier
  277 |   enum { NeedsAlignment = internal::traits<Quaternion>::[01;31m[KAlignment[m[K>0 };
      |                                                         [01;31m[K^~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:281:48:[m[K [01;31m[Kerror: [m[KISO C++ forbids declaration of â€˜[01m[KEIGEN_INHERIT_ASSIGNMENT_OPERATORS[m[Kâ€™ with no type [[01;31m[K-fpermissive[m[K]
  281 |   EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Quaternion[01;31m[K)[m[K
      |                                                [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:281:48:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
  281 |   EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Quaternion[01;31m[K)[m[K
      |                                                [01;31m[K^[m[K
      |                                                 [32m[K;[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:284:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEigen::internal::traits[m[Kâ€™ is not a template
  284 |   typedef typename internal::[01;31m[Ktraits[m[K<Quaternion>::Coefficients Coefficients;
      |                              [01;31m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:284:50:[m[K [01;31m[Kerror: [m[Ktypedef name may not be a nested-name-specifier
  284 |   typedef typename internal::traits<Quaternion>::[01;31m[KCoefficients[m[K Coefficients;
      |                                                  [01;31m[K^~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:284:50:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
  284 |   typedef typename internal::traits<Quaternion>::[01;31m[KCoefficients[m[K Coefficients;
      |                                                  [01;31m[K^~~~~~~~~~~~[m[K
      |                                                              [32m[K;[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:284:63:[m[K [01;31m[Kerror: [m[Kdeclaration does not declare anything [[01;31m[K-fpermissive[m[K]
  284 |   typedef typename internal::traits<Quaternion>::Coefficients [01;31m[KCoefficients[m[K;
      |                                                               [01;31m[K^~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:288:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  288 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K inline Quaternion() {}
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:297:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  297 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K inline Quaternion(const Scalar& w, const Scalar& x, const Scalar& y, const Scalar& z) : m_coeffs(x, y, z, w){}
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:300:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  300 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K explicit inline Quaternion(const Scalar* data) : m_coeffs(data) {}
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:303:27:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  303 |   template<class Derived> [01;31m[KEIGEN_DEVICE_FUNC[m[K EIGEN_STRONG_INLINE Quaternion(const QuaternionBase<Derived>& other) { this->Base::operator=(other); }
      |                           [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:306:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  306 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K explicit inline Quaternion(const AngleAxisType& aa) { *this = aa; }
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:313:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  313 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K explicit inline Quaternion(const MatrixBase<Derived>& other) { *this = other; }
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:317:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  317 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K explicit inline Quaternion(const Quaternion<OtherScalar, OtherOptions>& other)
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:335:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  335 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K static Quaternion UnitRandom();
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:338:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  338 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K static Quaternion FromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b);
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:340:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  340 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K inline Coefficients& coeffs() { return m_coeffs;}
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:341:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  341 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K inline const Coefficients& coeffs() const { return m_coeffs;}
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:343:58:[m[K [01;31m[Kerror: [m[KISO C++ forbids declaration of â€˜[01m[KEIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF[m[Kâ€™ with no type [[01;31m[K-fpermissive[m[K]
  343 |   EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF(bool(NeedsAlignment)[01;31m[K)[m[K
      |                                                          [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:343:58:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
  343 |   EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF(bool(NeedsAlignment)[01;31m[K)[m[K
      |                                                          [01;31m[K^[m[K
      |                                                           [32m[K;[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:353:12:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_STRONG_INLINE[m[Kâ€™ does not name a type
  353 |     static [01;31m[KEIGEN_STRONG_INLINE[m[K void _check_template_params()
      |            [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:363:25:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  363 | typedef Quaternion<float[01;31m[K>[m[K Quaternionf;
      |                         [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:366:26:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  366 | typedef Quaternion<double[01;31m[K>[m[K Quaterniond;
      |                          [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:374:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ktraits[m[Kâ€™ is not a class template
  374 |   struct [01;31m[Ktraits[m[K<Map<Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >
      |          [01;31m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:374:17:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KMap[m[Kâ€™ was not declared in this scope
  374 |   struct traits<[01;31m[KMap[m[K<Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >
      |                 [01;31m[K^~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:374:39:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  374 |   struct traits<Map<Quaternion<_Scalar[01;31m[K>[m[K, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >
      |                                       [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:374:52:[m[K [01;31m[Kerror: [m[Kexpected unqualified-id before â€˜[01m[K>[m[Kâ€™ token
  374 |   struct traits<Map<Quaternion<_Scalar>, _Options> [01;31m[K>[m[K : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >
      |                                                    [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:377:4:[m[K [01;35m[Kwarning: [m[Kextra â€˜[01m[K;[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  377 |   }[01;35m[K;[m[K
      |    [01;35m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:382:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ktraits[m[Kâ€™ is not a class template
  382 |   struct [01;31m[Ktraits[m[K<Map<const Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >
      |          [01;31m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:382:17:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KMap[m[Kâ€™ was not declared in this scope
  382 |   struct traits<[01;31m[KMap[m[K<const Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >
      |                 [01;31m[K^~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:382:58:[m[K [01;31m[Kerror: [m[Kexpected unqualified-id before â€˜[01m[K>[m[Kâ€™ token
  382 |   struct traits<Map<const Quaternion<_Scalar>, _Options> [01;31m[K>[m[K : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >
      |                                                          [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:389:4:[m[K [01;35m[Kwarning: [m[Kextra â€˜[01m[K;[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  389 |   }[01;35m[K;[m[K
      |    [01;35m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:404:7:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KMap[m[Kâ€™ is not a class template
  404 | class [01;31m[KMap[m[K<const Quaternion<_Scalar>, _Options >
      |       [01;31m[K^~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:404:35:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  404 | class Map<const Quaternion<_Scalar[01;31m[K>[m[K, _Options >
      |                                   [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:405:55:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  405 |   : public QuaternionBase<Map<const Quaternion<_Scalar[01;31m[K>[m[K, _Options> >
      |                                                       [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:405:66:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  405 |   : public QuaternionBase<Map<const Quaternion<_Scalar>, _Options[01;31m[K>[m[K >
      |                                                                  [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:405:68:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  405 |   : public QuaternionBase<Map<const Quaternion<_Scalar>, _Options> [01;31m[K>[m[K
      |                                                                    [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:408:56:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  408 |     typedef QuaternionBase<Map<const Quaternion<_Scalar[01;31m[K>[m[K, _Options> > Base;
      |                                                        [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:408:67:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  408 |     typedef QuaternionBase<Map<const Quaternion<_Scalar>, _Options[01;31m[K>[m[K > Base;
      |                                                                   [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:408:69:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  408 |     typedef QuaternionBase<Map<const Quaternion<_Scalar>, _Options> [01;31m[K>[m[K Base;
      |                                                                     [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:411:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEigen::internal::traits[m[Kâ€™ is not a template
  411 |     typedef typename internal::[01;31m[Ktraits[m[K<Map>::Coefficients Coefficients;
      |                                [01;31m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:411:45:[m[K [01;31m[Kerror: [m[Ktypedef name may not be a nested-name-specifier
  411 |     typedef typename internal::traits<Map>::[01;31m[KCoefficients[m[K Coefficients;
      |                                             [01;31m[K^~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:411:45:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
  411 |     typedef typename internal::traits<Map>::[01;31m[KCoefficients[m[K Coefficients;
      |                                             [01;31m[K^~~~~~~~~~~~[m[K
      |                                                         [32m[K;[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:411:58:[m[K [01;31m[Kerror: [m[Kdeclaration does not declare anything [[01;31m[K-fpermissive[m[K]
  411 |     typedef typename internal::traits<Map>::Coefficients [01;31m[KCoefficients[m[K;
      |                                                          [01;31m[K^~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:412:43:[m[K [01;31m[Kerror: [m[KISO C++ forbids declaration of â€˜[01m[KEIGEN_INHERIT_ASSIGNMENT_OPERATORS[m[Kâ€™ with no type [[01;31m[K-fpermissive[m[K]
  412 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Map[01;31m[K)[m[K
      |                                           [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:412:43:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
  412 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Map[01;31m[K)[m[K
      |                                           [01;31m[K^[m[K
      |                                            [32m[K;[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:413:11:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KBase[m[Kâ€™ is not a class, namespace, or enumeration
  413 |     using [01;31m[KBase[m[K::operator*=;
      |           [01;31m[K^~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:421:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  421 |     [01;31m[KEIGEN_DEVICE_FUNC[m[K explicit EIGEN_STRONG_INLINE Map(const Scalar* coeffs) : m_coeffs(coeffs) {}
      |     [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:423:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  423 |     [01;31m[KEIGEN_DEVICE_FUNC[m[K inline const Coefficients& coeffs() const { return m_coeffs;}
      |     [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:441:29:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  441 | class Map<Quaternion<_Scalar[01;31m[K>[m[K, _Options >
      |                             [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:441:41:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  441 | class Map<Quaternion<_Scalar>, _Options [01;31m[K>[m[K
      |                                         [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:442:49:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  442 |   : public QuaternionBase<Map<Quaternion<_Scalar[01;31m[K>[m[K, _Options> >
      |                                                 [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:442:60:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  442 |   : public QuaternionBase<Map<Quaternion<_Scalar>, _Options[01;31m[K>[m[K >
      |                                                            [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:442:62:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  442 |   : public QuaternionBase<Map<Quaternion<_Scalar>, _Options> [01;31m[K>[m[K
      |                                                              [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:469:29:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  469 | typedef Map<Quaternion<float[01;31m[K>[m[K, 0>         QuaternionMapf;
      |                             [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:469:33:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  469 | typedef Map<Quaternion<float>, 0[01;31m[K>[m[K         QuaternionMapf;
      |                                 [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:472:30:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  472 | typedef Map<Quaternion<double[01;31m[K>[m[K, 0>        QuaternionMapd;
      |                              [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:472:34:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  472 | typedef Map<Quaternion<double>, 0[01;31m[K>[m[K        QuaternionMapd;
      |                                  [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:475:29:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  475 | typedef Map<Quaternion<float[01;31m[K>[m[K, Aligned>   QuaternionMapAlignedf;
      |                             [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:475:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KAligned[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Ksigned[m[Kâ€™?
  475 | typedef Map<Quaternion<float>, [01;31m[KAligned[m[K>   QuaternionMapAlignedf;
      |                                [01;31m[K^~~~~~~[m[K
      |                                [32m[Ksigned[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:475:39:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  475 | typedef Map<Quaternion<float>, Aligned[01;31m[K>[m[K   QuaternionMapAlignedf;
      |                                       [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:475:39:[m[K [01;31m[Kerror: [m[Ktemplate argument 2 is invalid
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:478:30:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
  478 | typedef Map<Quaternion<double[01;31m[K>[m[K, Aligned>  QuaternionMapAlignedd;
      |                              [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:478:33:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KAligned[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Ksigned[m[Kâ€™?
  478 | typedef Map<Quaternion<double>, [01;31m[KAligned[m[K>  QuaternionMapAlignedd;
      |                                 [01;31m[K^~~~~~~[m[K
      |                                 [32m[Ksigned[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:478:40:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
  478 | typedef Map<Quaternion<double>, Aligned[01;31m[K>[m[K  QuaternionMapAlignedd;
      |                                        [01;31m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:478:40:[m[K [01;31m[Kerror: [m[Ktemplate argument 2 is invalid
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:489:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  489 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K static EIGEN_STRONG_INLINE Quaternion<Scalar> run(const QuaternionBase<Derived1>& a, const QuaternionBase<Derived2>& b){
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:504:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  504 | [01;31m[KEIGEN_DEVICE_FUNC[m[K EIGEN_STRONG_INLINE Quaternion<typename internal::traits<Derived>::Scalar>
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:516:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  516 | [01;31m[KEIGEN_DEVICE_FUNC[m[K EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator*= (const QuaternionBase<OtherDerived>& other)
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:530:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  530 | [01;31m[KEIGEN_DEVICE_FUNC[m[K EIGEN_STRONG_INLINE typename QuaternionBase<Derived>::Vector3
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:544:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  544 | [01;31m[KEIGEN_DEVICE_FUNC[m[K EIGEN_STRONG_INLINE QuaternionBase<Derived>& QuaternionBase<Derived>::operator=(const QuaternionBase<Derived>& other)
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:552:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  552 | [01;31m[KEIGEN_DEVICE_FUNC[m[K EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const QuaternionBase<OtherDerived>& other)
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:561:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  561 | [01;31m[KEIGEN_DEVICE_FUNC[m[K EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const AngleAxisType& aa)
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:579:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  579 | [01;31m[KEIGEN_DEVICE_FUNC[m[K inline Derived& QuaternionBase<Derived>::operator=(const MatrixBase<MatrixDerived>& xpr)
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:591:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  591 | [01;31m[KEIGEN_DEVICE_FUNC[m[K inline typename QuaternionBase<Derived>::Matrix3
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:638:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  638 | [01;31m[KEIGEN_DEVICE_FUNC[m[K inline Derived& QuaternionBase<Derived>::setFromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:679:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  679 | [01;31m[KEIGEN_DEVICE_FUNC[m[K Quaternion<Scalar,Options> Quaternion<Scalar,Options>::UnitRandom()
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:705:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  705 | [01;31m[KEIGEN_DEVICE_FUNC[m[K Quaternion<Scalar,Options> Quaternion<Scalar,Options>::FromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:720:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  720 | [01;31m[KEIGEN_DEVICE_FUNC[m[K inline Quaternion<typename internal::traits<Derived>::Scalar> QuaternionBase<Derived>::inverse() const
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:737:3:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  737 |   [01;31m[KEIGEN_DEVICE_FUNC[m[K static EIGEN_STRONG_INLINE Quaternion<Scalar> run(const QuaternionBase<Derived>& q){
      |   [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:750:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  750 | [01;31m[KEIGEN_DEVICE_FUNC[m[K inline Quaternion<typename internal::traits<Derived>::Scalar>
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:763:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  763 | [01;31m[KEIGEN_DEVICE_FUNC[m[K inline typename internal::traits<Derived>::Scalar
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:781:1:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  781 | [01;31m[KEIGEN_DEVICE_FUNC[m[K Quaternion<typename internal::traits<Derived>::Scalar>
      | [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:819:27:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  819 |   template<class Derived> [01;31m[KEIGEN_DEVICE_FUNC[m[K static inline void run(QuaternionBase<Derived>& q, const Other& a_mat)
      |                           [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:860:27:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEIGEN_DEVICE_FUNC[m[Kâ€™ does not name a type
  860 |   template<class Derived> [01;31m[KEIGEN_DEVICE_FUNC[m[K static inline void run(QuaternionBase<Derived>& q, const Other& vec)
      |                           [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/controller.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/controller.cpp:17:28:[m[K [01;31m[Kerror: [m[Kwrong number of template arguments (1, should be 2)
   17 |     Eigen::Quaternion<float[01;31m[K>[m[K q;
      |                            [01;31m[K^[m[K
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/controller.cpp:11[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:273:7:[m[K [01;36m[Knote: [m[Kprovided for â€˜[01m[Ktemplate<class _Scalar, int _Options> class Eigen::Quaternion[m[Kâ€™
  273 | class [01;36m[KQuaternion[m[K : public QuaternionBase<Quaternion<_Scalar,_Options> >
      |       [01;36m[K^~~~~~~~~~[m[K
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/topic_server.h:4[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/local_smartdata.h:8[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/controller.cpp:1[m[K:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/units.h:7:11:[m[K [01;31m[Kerror: [m[Kexpected unqualified-id before numeric constant
    7 | #define q [01;31m[K4[m[K // quaternion digital unit
      |           [01;31m[K^[m[K
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/controller.cpp:17:30:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[Kq[m[Kâ€™
   17 |     Eigen::Quaternion<float> [01;36m[Kq[m[K;
      |                              [01;36m[K^[m[K
In file included from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/smartdata.h:7[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/local_smartdata.h:4[m[K,
                 from [01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/controller.cpp:1[m[K:
/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h: In instantiation of â€˜[01m[Kvoid Transducer<UNIT, Value>::actuate(const Value&) [with long unsigned int UNIT = 2; Value = float][m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h:17:22:[m[K   required from here
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h:17:43:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kvalue[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   17 |         virtual void actuate([01;35m[Kconst Value &value[m[K){}
      |                              [01;35m[K~~~~~~~~~~~~~^~~~~[m[K
/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h: In instantiation of â€˜[01m[KValue Transducer<UNIT, Value>::sense() [with long unsigned int UNIT = 2; Value = float][m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h:16:23:[m[K   required from here
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h:16:31:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
   16 |         virtual Value sense(){[01;35m[K}[m[K
      |                               [01;35m[K^[m[K
/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h: In instantiation of â€˜[01m[Kvoid Transducer<UNIT, Value>::actuate(const Value&) [with long unsigned int UNIT = 3; Value = float][m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h:17:22:[m[K   required from here
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h:17:43:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kvalue[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   17 |         virtual void actuate([01;35m[Kconst Value &value[m[K){}
      |                              [01;35m[K~~~~~~~~~~~~~^~~~~[m[K
/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h: In instantiation of â€˜[01m[KValue Transducer<UNIT, Value>::sense() [with long unsigned int UNIT = 3; Value = float][m[Kâ€™:
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h:16:23:[m[K   required from here
[01m[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/controller/src/../include/transducer.h:16:31:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K-Wreturn-type[m[K]
   16 |         virtual Value sense(){[01;35m[K}[m[K
      |                               [01;35m[K^[m[K
make[2]: *** [CMakeFiles/controller.dir/build.make:63: CMakeFiles/controller.dir/src/controller.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/controller.dir/all] Error 2
make: *** [Makefile:141: all] Error 2

[0.000000] (-) TimerEvent: {}
[0.000166] (-) JobUnselected: {'identifier': 'cubesat_actuators'}
[0.000210] (-) JobUnselected: {'identifier': 'cubesat_controllers'}
[0.000243] (-) JobUnselected: {'identifier': 'cubesat_description'}
[0.000271] (-) JobUnselected: {'identifier': 'cubesat_gazebo'}
[0.000298] (-) JobUnselected: {'identifier': 'smartdata_test'}
[0.000348] (cubesat_sensors) JobQueued: {'identifier': 'cubesat_sensors', 'dependencies': OrderedDict()}
[0.000378] (cubesat_sensors) JobStarted: {'identifier': 'cubesat_sensors'}
[0.067713] (cubesat_sensors) JobProgress: {'identifier': 'cubesat_sensors', 'progress': 'cmake'}
[0.068725] (cubesat_sensors) JobProgress: {'identifier': 'cubesat_sensors', 'progress': 'build'}
[0.069607] (cubesat_sensors) Command: {'cmd': ['/usr/local/bin/cmake', '--build', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/build/cubesat_sensors', '--', '-j8', '-l8'], 'cwd': '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/build/cubesat_sensors', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'matheuswagner'), ('LANGUAGE', 'en'), ('LC_TIME', 'pt_BR.UTF-8'), ('TEXTDOMAIN', 'im-config'), ('OSPL_INFOFILE', '<stdout>'), ('XDG_SEAT', 'seat0'), ('SSH_AGENT_PID', '4234'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/snap/code/88/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('LD_LIBRARY_PATH', '/home/matheuswagner/ros2_dashing/ros2-linux/opt/yaml_cpp_vendor/lib:/home/matheuswagner/ros2_dashing/ros2-linux/opt/rviz_ogre_vendor/lib:/usr/lib:/home/matheuswagner/ros2_dashing/ros2-linux/lib:/usr/lib/x86_64-linux-gnu/gazebo-9/plugins:/opt/ros/dashing/opt/yaml_cpp_vendor/lib:/opt/rti.com/rti_connext_dds-5.3.1/lib/x64Linux3gcc5.4.0:/opt/ros/dashing/lib:/home/matheuswagner/Downloads/omnetpp-4.6-src/omnetpp-4.6/lib'), ('SHLVL', '1'), ('OLDPWD', '/home/matheuswagner/repos/adaptive-cubesat-adcs'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('OSPL_URI', 'file:///home/matheuswagner/ros2_dashing/ros2-linux/share/opensplice_cmake_module/config/ros_ospl.xml'), ('QT4_IM_MODULE', 'xim'), ('HOME', '/home/matheuswagner'), ('DESKTOP_SESSION', 'ubuntu'), ('TERM_PROGRAM_VERSION', '1.64.2'), ('GIO_LAUNCHED_DESKTOP_FILE', '/var/lib/snapd/desktop/applications/code_code.desktop'), ('OSPL_VERBOSITY', '2'), ('NDDSHOME', '/opt/rti.com/rti_connext_dds-5.3.1'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL', 'true'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/snap/code/88/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('ROS_PYTHON_VERSION', '3'), ('LC_MONETARY', 'pt_BR.UTF-8'), ('LC_CTYPE', 'pt_BR.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/snap/code/88/usr/share/code/code'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('OSPL_TMPL_PATH', '/usr/etc/opensplice/idlpp'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '5791'), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('COLCON_PREFIX_PATH', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install:/home/matheuswagner/ros2_dashing/ros2-linux'), ('IM_CONFIG_PHASE', '2'), ('ROS_DISTRO', 'dashing'), ('LOGNAME', 'matheuswagner'), ('GTK_IM_MODULE', 'ibus'), ('_', '/home/matheuswagner/.local/bin/colcon'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('ROS_VERSION', '2'), ('PKG_CONFIG_PATH', '/home/matheuswagner/ros2_dashing/ros2-linux/lib/x86_64-linux-gnu/pkgconfig:/home/matheuswagner/ros2_dashing/ros2-linux/lib/pkgconfig'), ('USERNAME', 'matheuswagner'), ('XDG_SESSION_ID', '2'), ('TERM', 'xterm-256color'), ('OSPL_ERRORFILE', '<stderr>'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '2'), ('PATH', '/home/matheuswagner/ros2_dashing/ros2-linux/bin:/opt/rti.com/rti_connext_dds-5.3.1/lib/x64Linux3gcc5.4.0:/opt/rti.com/rti_connext_dds-5.3.1/bin:/opt/ros/dashing/bin:/home/matheuswagner/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/matheuswagner/Downloads/omnetpp-4.6-src/omnetpp-4.6/bin'), ('PAPERSIZE', 'a4'), ('SESSION_MANAGER', 'local/matheuswagner-Inspiron-7572:@/tmp/.ICE-unix/4156,unix/matheuswagner-Inspiron-7572:/tmp/.ICE-unix/4156'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'pt_BR.UTF-8'), ('BAMF_DESKTOP_FILE_HINT', '/var/lib/snapd/desktop/applications/code_code.desktop'), ('GDK_BACKEND', 'x11'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('OSPL_HOME', '/usr'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'pt_BR.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('TERM_PROGRAM', 'vscode'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XMODIFIERS', '@im=ibus'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-c7856e65b5.sock'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('AMENT_PREFIX_PATH', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/smartdata_test:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_gazebo:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_description:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_controller:/home/matheuswagner/ros2_dashing/ros2-linux:/opt/ros/dashing'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('GSETTINGS_SCHEMA_DIR', '/snap/code/88/usr/share/glib-2.0/schemas'), ('DISABLE_WAYLAND', '1'), ('LC_NAME', 'pt_BR.UTF-8'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'pt_BR.UTF-8'), ('TEXTDOMAINDIR', '/usr/share/locale/'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'pt_BR.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('XDG_VTNR', '2'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/build/cubesat_sensors'), ('CLUTTER_IM_MODULE', 'xim'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('LC_NUMERIC', 'pt_BR.UTF-8'), ('PYTHONPATH', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_description/lib/python3.6/site-packages:/home/matheuswagner/ros2_dashing/ros2-linux/lib/python3.6/site-packages:/opt/ros/dashing/lib/python3.6/site-packages'), ('LC_PAPER', 'pt_BR.UTF-8'), ('BREAKPAD_DUMP_LOCATION', '/home/matheuswagner/.config/Code/exthost Crash Reports'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/smartdata_test:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_gazebo:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_controller:/home/matheuswagner/ros2_dashing/ros2-linux:/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/install/cubesat_description:/opt/ros/dashing')]), 'shell': False}
[0.096100] (cubesat_sensors) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target imu_adapter\x1b[0m\n'}
[0.097133] (-) TimerEvent: {}
[0.107526] (cubesat_sensors) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/imu_adapter.dir/src/imu_adapter.cpp.o\x1b[0m\n'}
[0.197275] (-) TimerEvent: {}
[0.297956] (-) TimerEvent: {}
[0.398292] (-) TimerEvent: {}
[0.498613] (-) TimerEvent: {}
[0.598932] (-) TimerEvent: {}
[0.699268] (-) TimerEvent: {}
[0.799585] (-) TimerEvent: {}
[0.899881] (-) TimerEvent: {}
[1.000169] (-) TimerEvent: {}
[1.100451] (-) TimerEvent: {}
[1.200782] (-) TimerEvent: {}
[1.292863] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::ImuAdapter()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.293180] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:21:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_adapter\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[1.293297] (cubesat_sensors) StderrLine: {'line': b'       subcription = this->create_subscription<\x1b[01;31m\x1b[Kimu_adapter\x1b[m\x1b[K::msg::Imu>("imu_plugin/out", 10, std::bind(&ImuAdapter::AtMessageArival, this, std::placeholders::_1));\n'}
[1.293402] (cubesat_sensors) StderrLine: {'line': b'                                               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.294188] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:21:47:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Ksuggested alternative: \xe2\x80\x98\x1b[01m\x1b[KImuAdapter\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.294307] (cubesat_sensors) StderrLine: {'line': b'       subcription = this->create_subscription<\x1b[01;36m\x1b[Kimu_adapter\x1b[m\x1b[K::msg::Imu>("imu_plugin/out", 10, std::bind(&ImuAdapter::AtMessageArival, this, std::placeholders::_1));\n'}
[1.294407] (cubesat_sensors) StderrLine: {'line': b'                                               \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.294506] (cubesat_sensors) StderrLine: {'line': b'                                               \x1b[32m\x1b[KImuAdapter\x1b[m\x1b[K\n'}
[1.294604] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:21:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kparse error in template argument list\n'}
[1.294710] (cubesat_sensors) StderrLine: {'line': b'       subcription = this->\x1b[01;31m\x1b[Kcreate_subscription<imu_adapter::msg::Imu>\x1b[m\x1b[K("imu_plugin/out", 10, std::bind(&ImuAdapter::AtMessageArival, this, std::placeholders::_1));\n'}
[1.294851] (cubesat_sensors) StderrLine: {'line': b'                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.300904] (-) TimerEvent: {}
[1.304500] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:21:160:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KImuAdapter::create_subscription<<expression error> >(const char [15], int, std::_Bind_helper<false, void (ImuAdapter::*)(std::shared_ptr<sensor_msgs::msg::Imu_<std::allocator<void> > >), ImuAdapter*, const std::_Placeholder<1>&>::type)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.305032] (cubesat_sensors) StderrLine: {'line': b'     subcription = this->create_subscription<imu_adapter::msg::Imu>("imu_plugin/out", 10, std::bind(&ImuAdapter::AtMessageArival, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[1.305146] (cubesat_sensors) StderrLine: {'line': b'                                                                                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.305239] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[1.305333] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.305418] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[1.305503] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[1.305590] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:242:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr)\n'}
[1.305692] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_subscription\x1b[m\x1b[K(\n'}
[1.305778] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.305863] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:242:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.305949] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:21:160:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[1.306036] (cubesat_sensors) StderrLine: {'line': b'     subcription = this->create_subscription<imu_adapter::msg::Imu>("imu_plugin/out", 10, std::bind(&ImuAdapter::AtMessageArival, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[1.306126] (cubesat_sensors) StderrLine: {'line': b'                                                                                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.306258] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[1.306398] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.306531] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[1.306659] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[1.306773] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:279:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class CallbackT, class Alloc, class SubscriptionT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::callback_group::CallbackGroup::SharedPtr, bool, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr, std::shared_ptr<PublisherT>)\n'}
[1.306907] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_subscription\x1b[m\x1b[K(\n'}
[1.307020] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.307131] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:279:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.307245] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:21:160:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[1.307358] (cubesat_sensors) StderrLine: {'line': b'     subcription = this->create_subscription<imu_adapter::msg::Imu>("imu_plugin/out", 10, std::bind(&ImuAdapter::AtMessageArival, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[1.307470] (cubesat_sensors) StderrLine: {'line': b'                                                                                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.307916] (cubesat_sensors) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors/single_threaded_executor.hpp:28:0\x1b[m\x1b[K,\n'}
[1.308063] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[1.308190] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/rclcpp.hpp:144\x1b[m\x1b[K,\n'}
[1.308326] (cubesat_sensors) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:6\x1b[m\x1b[K:\n'}
[1.308440] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:316:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: template<class MessageT, class CallbackT, class Alloc, class SubscriptionT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, CallbackT&&, size_t, rclcpp::callback_group::CallbackGroup::SharedPtr, bool, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr, std::shared_ptr<PublisherT>)\n'}
[1.308564] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[Kcreate_subscription\x1b[m\x1b[K(\n'}
[1.308678] (cubesat_sensors) StderrLine: {'line': b'   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.308806] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/ros2_dashing/ros2-linux/include/rclcpp/node.hpp:316:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.308918] (cubesat_sensors) StderrLine: {'line': b'\x1b[01m\x1b[K/home/matheuswagner/repos/adaptive-cubesat-adcs/cubesat-simulation/src/cubesat_sensors/src/imu_adapter.cpp:21:160:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[1.309000] (cubesat_sensors) StderrLine: {'line': b'     subcription = this->create_subscription<imu_adapter::msg::Imu>("imu_plugin/out", 10, std::bind(&ImuAdapter::AtMessageArival, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[1.309126] (cubesat_sensors) StderrLine: {'line': b'                                                                                                                                                              \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.400996] (-) TimerEvent: {}
[1.501282] (-) TimerEvent: {}
[1.601789] (-) TimerEvent: {}
[1.702359] (-) TimerEvent: {}
[1.802655] (-) TimerEvent: {}
[1.842561] (cubesat_sensors) StdoutLine: {'line': b"CMakeFiles/imu_adapter.dir/build.make:81: recipe for target 'CMakeFiles/imu_adapter.dir/src/imu_adapter.cpp.o' failed\n"}
[1.843013] (cubesat_sensors) StderrLine: {'line': b'make[2]: *** [CMakeFiles/imu_adapter.dir/src/imu_adapter.cpp.o] Error 1\n'}
[1.843220] (cubesat_sensors) StderrLine: {'line': b'make[1]: *** [CMakeFiles/imu_adapter.dir/all] Error 2\n'}
[1.843342] (cubesat_sensors) StdoutLine: {'line': b"CMakeFiles/Makefile2:95: recipe for target 'CMakeFiles/imu_adapter.dir/all' failed\n"}
[1.843454] (cubesat_sensors) StderrLine: {'line': b'make: *** [all] Error 2\n'}
[1.843558] (cubesat_sensors) StdoutLine: {'line': b"Makefile:159: recipe for target 'all' failed\n"}
[1.846037] (cubesat_sensors) CommandEnded: {'returncode': 2}
[1.907849] (-) TimerEvent: {}
[1.930169] (cubesat_sensors) JobEnded: {'identifier': 'cubesat_sensors', 'rc': 2}
[1.940983] (-) EventReactorShutdown: {}
